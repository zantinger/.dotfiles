
# Configuration for Alacritty, the GPU enhanced terminal emulator.
# shell:
#   program: /bin/bash
#   args:
#     - -l
#       #    - -c
#       #    - "tmux"

window:
  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
   padding:
     x: 10
     y: 4

  # Spread additional padding evenly around the terminal content.
  # dynamic_padding: true

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  # decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  # startup_mode: Windowed

# scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  # history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  # multiplier: 3

# Font configuration (changes require restart)
font:
  normal:
    # Font family
    #family: "JetBrains Mono"
      #family: "Hack"
    family: "FiraCode Nerd Font"
    style: Regular


  # Point size
  size: 16.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Colors (Gruvbox dark)
# colors:
#   primary:
#     hard contrast: background = '0x1d2021'
#     background: "0x282828"
#     soft contrast: background = '0x32302f'
#     foreground: "0xebdbb2"

#   # Normal colors
#   normal:
#     black: "0x282828"
#     red: "0xcc241d"
#     green: "0x98971a"
#     yellow: "0xd79921"
#     blue: "0x458588"
#     magenta: "0xb16286"
#     cyan: "0x689d6a"
#     white: "0xa89984"

#   # Bright colors
#   bright:
#     black: "0x928374"
#     red: "0xfb4934"
#     green: "0xb8bb26"
#     yellow: "0xfabd2f"
#     blue: "0x83a598"
#     magenta: "0xd3869b"
#     cyan: "0x8ec07c"
#     white: "0xebdbb2"

  
background_opacity: 0.85

# mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }
  # If this is `true`, the cursor is temporarily hidden when typing.
  # hide_when_typing: false

# selection:
  # semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to the primary clipboard.
  # save_to_clipboard: false

# cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  # style: Block
  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  # unfocused_hollow: true

# Live config reload (changes require restart)
# live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux) user login shell
#   - (Windows) powershell
# shell:
# program: /usr/bin/zsh
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
# working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
# alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
#key_bindings:
  # (Windows/Linux only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

  # - { key: paste, action: paste }
  # - { key: copy, action: copy }
  # - { key: l, mods: control, action: clearlognotice }
  # - { key: l, mods: control, chars: "\x0c" }
  # - { key: home, mods: alt, chars: "\x1b[1;3h" }
  # - { key: home, chars: "\x1boh", mode: appcursor }
  # - { key: home, chars: "\x1b[h", mode: ~appcursor }
  # - { key: end, mods: alt, chars: "\x1b[1;3f" }
  # - { key: end, chars: "\x1bof", mode: appcursor }
  # - { key: end, chars: "\x1b[f", mode: ~appcursor }
  # - { key: pageup, mods: shift, action: scrollpageup, mode: ~alt }
  # - { key: pageup, mods: shift, chars: "\x1b[5;2~", mode: alt }
  # - { key: pageup, mods: control, chars: "\x1b[5;5~" }
  # - { key: pageup, mods: alt, chars: "\x1b[5;3~" }
  # - { key: pageup, chars: "\x1b[5~" }
  # - { key: pagedown, mods: shift, action: scrollpagedown, mode: ~alt }
  # - { key: pagedown, mods: shift, chars: "\x1b[6;2~", mode: alt }
  # - { key: pagedown, mods: control, chars: "\x1b[6;5~" }
  # - { key: pagedown, mods: alt, chars: "\x1b[6;3~" }
  # - { key: pagedown, chars: "\x1b[6~" }
  # - { key: tab, mods: shift, chars: "\x1b[z" }
  # - { key: back, chars: "\x7f" }
  # - { key: back, mods: alt, chars: "\x1b\x7f" }
  # - { key: insert, chars: "\x1b[2~" }
  # - { key: delete, chars: "\x1b[3~" }
  # - { key: left, mods: shift, chars: "\x1b[1;2d" }
  # - { key: left, mods: control, chars: "\x1b[1;5d" }
  # - { key: left, mods: alt, chars: "\x1b[1;3d" }
  # - { key: left, chars: "\x1b[d", mode: ~appcursor }
  # - { key: left, chars: "\x1bod", mode: appcursor }
  # - { key: right, mods: shift, chars: "\x1b[1;2c" }
  # - { key: right, mods: control, chars: "\x1b[1;5c" }
  # - { key: right, mods: alt, chars: "\x1b[1;3c" }
  # - { key: right, chars: "\x1b[c", mode: ~appcursor }
  # - { key: right, chars: "\x1boc", mode: appcursor }
  # - { key: up, mods: shift, chars: "\x1b[1;2a" }
  # - { key: up, mods: control, chars: "\x1b[1;5a" }
  # - { key: up, mods: alt, chars: "\x1b[1;3a" }
  # - { key: up, chars: "\x1b[a", mode: ~appcursor }
  # - { key: up, chars: "\x1boa", mode: appcursor }
  # - { key: down, mods: shift, chars: "\x1b[1;2b" }
  # - { key: down, mods: control, chars: "\x1b[1;5b" }
  # - { key: down, mods: alt, chars: "\x1b[1;3b" }
  # - { key: down, chars: "\x1b[b", mode: ~appcursor }
  # - { key: down, chars: "\x1bob", mode: appcursor }
  # - { key: f1, chars: "\x1bop" }
  # - { key: f2, chars: "\x1boq" }
  # - { key: f3, chars: "\x1bor" }
  # - { key: f4, chars: "\x1bos" }
  # - { key: f5, chars: "\x1b[15~" }
  # - { key: f6, chars: "\x1b[17~" }
  # - { key: f7, chars: "\x1b[18~" }
  # - { key: f8, chars: "\x1b[19~" }
  # - { key: f9, chars: "\x1b[20~" }
  # - { key: f10, chars: "\x1b[21~" }
  # - { key: f11, chars: "\x1b[23~" }
  # - { key: f12, chars: "\x1b[24~" }
  # - { key: f1, mods: shift, chars: "\x1b[1;2p" }
  # - { key: f2, mods: shift, chars: "\x1b[1;2q" }
  # - { key: f3, mods: shift, chars: "\x1b[1;2r" }
  # - { key: f4, mods: shift, chars: "\x1b[1;2s" }
  # - { key: f5, mods: shift, chars: "\x1b[15;2~" }
  # - { key: f6, mods: shift, chars: "\x1b[17;2~" }
  # - { key: f7, mods: shift, chars: "\x1b[18;2~" }
  # - { key: f8, mods: shift, chars: "\x1b[19;2~" }
  # - { key: f9, mods: shift, chars: "\x1b[20;2~" }
  # - { key: f10, mods: shift, chars: "\x1b[21;2~" }
  # - { key: f11, mods: shift, chars: "\x1b[23;2~" }
  # - { key: f12, mods: shift, chars: "\x1b[24;2~" }
  # - { key: f1, mods: control, chars: "\x1b[1;5p" }
  # - { key: f2, mods: control, chars: "\x1b[1;5q" }
  # - { key: f3, mods: control, chars: "\x1b[1;5r" }
  # - { key: f4, mods: control, chars: "\x1b[1;5s" }
  # - { key: f5, mods: control, chars: "\x1b[15;5~" }
  # - { key: f6, mods: control, chars: "\x1b[17;5~" }
  # - { key: f7, mods: control, chars: "\x1b[18;5~" }
  # - { key: f8, mods: control, chars: "\x1b[19;5~" }
  # - { key: f9, mods: control, chars: "\x1b[20;5~" }
  # - { key: f10, mods: control, chars: "\x1b[21;5~" }
  # - { key: f11, mods: control, chars: "\x1b[23;5~" }
  # - { key: f12, mods: control, chars: "\x1b[24;5~" }
  # - { key: f1, mods: alt, chars: "\x1b[1;6p" }
  # - { key: f2, mods: alt, chars: "\x1b[1;6q" }
  # - { key: f3, mods: alt, chars: "\x1b[1;6r" }
  # - { key: f4, mods: alt, chars: "\x1b[1;6s" }
  # - { key: f5, mods: alt, chars: "\x1b[15;6~" }
  # - { key: f6, mods: alt, chars: "\x1b[17;6~" }
  # - { key: f7, mods: alt, chars: "\x1b[18;6~" }
  # - { key: f8, mods: alt, chars: "\x1b[19;6~" }
  # - { key: f9, mods: alt, chars: "\x1b[20;6~" }
  # - { key: f10, mods: alt, chars: "\x1b[21;6~" }
  # - { key: f11, mods: alt, chars: "\x1b[23;6~" }
  # - { key: f12, mods: alt, chars: "\x1b[24;6~" }
  # - { key: f1, mods: super, chars: "\x1b[1;3p" }
  # - { key: f2, mods: super, chars: "\x1b[1;3q" }
  # - { key: f3, mods: super, chars: "\x1b[1;3r" }
  # - { key: f4, mods: super, chars: "\x1b[1;3s" }
  # - { key: f5, mods: super, chars: "\x1b[15;3~" }
  # - { key: f6, mods: super, chars: "\x1b[17;3~" }
  # - { key: f7, mods: super, chars: "\x1b[18;3~" }
  # - { key: f8, mods: super, chars: "\x1b[19;3~" }
  # - { key: f9, mods: super, chars: "\x1b[20;3~" }
  # - { key: f10, mods: super, chars: "\x1b[21;3~" }
  # - { key: f11, mods: super, chars: "\x1b[23;3~" }
  # - { key: f12, mods: super, chars: "\x1b[24;3~" }
  # - { key: numpadenter, chars: "\n" }

